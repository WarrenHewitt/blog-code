(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{222:function(t,a,e){"use strict";e.r(a);var s=e(0),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#vue"}},[t._v("Vue")]),e("ul",[e("li",[e("a",{attrs:{href:"#iview-引起的bug"}},[t._v("iview 引起的BUG")])]),e("li",[e("a",{attrs:{href:"#vue-test-utils"}},[t._v("Vue Test Utils")])]),e("li",[e("a",{attrs:{href:"#vue-cli"}},[t._v("vue-cli")])]),e("li",[e("a",{attrs:{href:"#cue-cli-3"}},[t._v("cue-cli-3")])]),e("li",[e("a",{attrs:{href:"#注意项"}},[t._v("注意项")])]),e("li",[e("a",{attrs:{href:"#生命周期"}},[t._v("生命周期")])]),e("li",[e("a",{attrs:{href:"#组件基础"}},[t._v("组件基础")])]),e("li",[e("a",{attrs:{href:"#自定义事件"}},[t._v("自定义事件")])]),e("li",[e("a",{attrs:{href:"#vue-loader"}},[t._v("vue-loader")])]),e("li",[e("a",{attrs:{href:"#keep-alive"}},[t._v("keep-alive")])]),e("li",[e("a",{attrs:{href:"#深入响应式原理"}},[t._v("深入响应式原理")])])])]),e("li",[e("a",{attrs:{href:"#vuex"}},[t._v("vuex")])]),e("li",[e("a",{attrs:{href:"#api-once-over"}},[t._v("api once-over")]),e("ul",[e("li",[e("a",{attrs:{href:"#计算属性"}},[t._v("计算属性")])])])])])]),t._v(" "),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#vue"}},[t._v("Vue")]),e("ul",[e("li",[e("a",{attrs:{href:"#iview-引起的bug"}},[t._v("iview 引起的BUG")])]),e("li",[e("a",{attrs:{href:"#vue-test-utils"}},[t._v("Vue Test Utils")])]),e("li",[e("a",{attrs:{href:"#vue-cli"}},[t._v("vue-cli")])]),e("li",[e("a",{attrs:{href:"#cue-cli-3"}},[t._v("cue-cli-3")])]),e("li",[e("a",{attrs:{href:"#注意项"}},[t._v("注意项")])]),e("li",[e("a",{attrs:{href:"#生命周期"}},[t._v("生命周期")])]),e("li",[e("a",{attrs:{href:"#组件基础"}},[t._v("组件基础")])]),e("li",[e("a",{attrs:{href:"#自定义事件"}},[t._v("自定义事件")])]),e("li",[e("a",{attrs:{href:"#vue-loader"}},[t._v("vue-loader")])]),e("li",[e("a",{attrs:{href:"#keep-alive"}},[t._v("keep-alive")])]),e("li",[e("a",{attrs:{href:"#深入响应式原理"}},[t._v("深入响应式原理")])])])]),e("li",[e("a",{attrs:{href:"#vuex"}},[t._v("vuex")])]),e("li",[e("a",{attrs:{href:"#api-once-over"}},[t._v("api once-over")]),e("ul",[e("li",[e("a",{attrs:{href:"#计算属性"}},[t._v("计算属性")])])])])])]),e("p"),t._v(" "),e("hr"),t._v(" "),e("hr"),t._v(" "),e("ul",[e("li",[t._v("axios 可以自动判断上传的数据是否是formdata，从而修改content-type")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("router-view 与路由表中的 children 有关")])]),t._v(" "),e("li",[e("p",[t._v("router.push 改为了 Promise")])])]),t._v(" "),e("h3",{attrs:{id:"iview-引起的bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iview-引起的bug"}},[t._v("#")]),t._v(" iview 引起的BUG")]),t._v(" "),e("ul",[e("li",[t._v("在table中使用drop down 被遮挡，将外层的class重置")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".ivu-table-wrapper{\n    overflow: visible;\n}\n")])])]),e("h3",{attrs:{id:"vue-test-utils"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-test-utils"}},[t._v("#")]),t._v(" Vue Test Utils")]),t._v(" "),e("p",[t._v("https://vue-test-utils.vuejs.org/zh/")]),t._v(" "),e("p",[t._v("mocha：对测试过程进行描述 (语句中的describe和it等方法)")]),t._v(" "),e("p",[t._v("chai：断言库，即各种判断(expect方法)")]),t._v(" "),e("p",[t._v("Karma: 一个启动浏览器运行测试并生成报告的测试运行器")]),t._v(" "),e("p",[t._v("sinon: 模拟与其它系统或函数对接，主要有三个方法 spy stub mock")]),t._v(" "),e("p",[t._v("cypress: Fast, easy and reliable testing for anything that runs in a browser.")]),t._v(" "),e("h3",{attrs:{id:"vue-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli"}},[t._v("#")]),t._v(" vue-cli")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("assets 目录一般主要放样式代码 会被webpack编译")])]),t._v(" "),e("li",[e("p",[t._v("当打包后的代码不是放到域名的根目录，导致css中的背景图片路径不正确，可以将图片放到此目录，然后在build/utils.js 中修改ExtractTextPlugin 的 publicPath")])]),t._v(" "),e("li",[e("p",[t._v("最好用相对路径")])])]),t._v(" "),e("h4",{attrs:{id:"脚手架打包出来的文字图标不显示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚手架打包出来的文字图标不显示"}},[t._v("#")]),t._v(" 脚手架打包出来的文字图标不显示")]),t._v(" "),e("p",[t._v("修改webpack.base.conf.js 的")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  loader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url-loader'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    limit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的值改大一点")]),t._v("\n    name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("assetsPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fonts/[name].[hash:7].[ext]'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"cue-cli-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cue-cli-3"}},[t._v("#")]),t._v(" cue-cli-3")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("CSS Pre-processors：选择CSS 预处理类型：sass 或less")])]),t._v(" "),e("li",[e("p",[t._v("Linter / Formatter：选择eslint 标准，以及是否在保存时格式化代码")])]),t._v(" "),e("li",[e("p",[t._v("图片资源放到assets，不要放到public中否则打包出来的图片会是两份")])]),t._v(" "),e("li",[e("p",[t._v("其它的js资源可以放到public中")])]),t._v(" "),e("li",[e("p",[t._v("vue inspect > output.js 仅仅用于审查")])]),t._v(" "),e("li",[e("p",[t._v("在开发模式时，环境变量 process.env.NODE_ENV 为 development；打包时为 production")])]),t._v(" "),e("li",[e("p",[t._v("生产环境部署：https://cn.vuejs.org/v2/guide/deployment.html")])]),t._v(" "),e("li",[e("p",[t._v("环境变量和模式 (webpack-pure和node-koa项目中有相关实例内容)")]),t._v(" "),e("ul",[e("li",[t._v("链接https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F")]),t._v(" "),e("li",[t._v("可以在命令行传参")]),t._v(" "),e("li",[t._v("有固定的参数")])])])]),t._v(" "),e("h3",{attrs:{id:"注意项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意项"}},[t._v("#")]),t._v(" 注意项")]),t._v(" "),e("h4",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("ul",[e("li",[t._v("Mustache（大胡子）：{{}}")])]),t._v(" "),e("hr"),t._v(" "),e("ul",[e("li",[t._v("export defaule 后的东西默认为new Vue()的参数")])]),t._v(" "),e("hr"),t._v(" "),e("ol",[e("li",[e("p",[t._v("无论何时，绑定的数据对象上 message 属性发生了改变，插值处的内容都会更新;通过使用 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新。")])]),t._v(" "),e("li",[e("p",[t._v("过滤器函数总接受表达式的值作为第一个参数。")])]),t._v(" "),e("li",[e("p",[t._v("模板表达式都被放在沙盒中，只能访问全局变量的一个白名单，如 Math 和 Date 。你不应该在模板表达式中试图访问用户定义的全局变量。")])]),t._v(" "),e("li",[e("p",[t._v("Vue 2.x 中，过滤器只能在 mustache 绑定和 v-bind 表达式（从 2.1.0 开始支持）中使用，因为过滤器设计目的就是用于文本转换。为了在其他指令中实现更复杂的数据变换，你应该使用计算属性。")])]),t._v(" "),e("li",[e("p",[t._v("然而，不同的是计算属性是基于它们的依赖进行缓存的，计算属性只有在它的相关依赖发生改变时才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。")])]),t._v(" "),e("li",[e("p",[t._v("计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter")])]),t._v(" "),e("li",[e("p",[t._v("在 v-bind 用于 class 和 style 时， Vue.js 专门增强了它。")])]),t._v(" "),e("li",[e("p",[t._v("v-else 元素必须紧跟在 v-if 或者 v-else-if 元素的后面——否则它将不会被识别。类似于 v-else，v-else-if 必须紧跟在 v-if 或者 v-else-if 元素之后。")])]),t._v(" "),e("li",[e("p",[t._v("非常频繁地切换，则使用 v-show 较好；如果在运行时条件不太可能改变，则使用 v-if 较好。")])]),t._v(" "),e("li",[e("p",[t._v("有时也需要在内联语句处理器中访问原生 DOM 事件。可以用特殊变量 $event 把它传入方法")])]),t._v(" "),e("li",[e("p",[t._v("v-model后不能跟表达式")])])]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("ul",[e("li",[t._v("destroyed ： 如果有定时器，在该钩子函数中务必清除\nhttps://www.jianshu.com/p/a20f2023c78a")])]),t._v(" "),e("h3",{attrs:{id:"组件基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件基础"}},[t._v("#")]),t._v(" 组件基础")]),t._v(" "),e("ol",[e("li",[t._v("data 选项必须是一个函数，因为可以返回对对象的独立拷贝，避免相互影响")]),t._v(" "),e("li",[t._v("每个组件必须只有一个根元素")]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('利用 $emit(n ame, value) 来向父组件传参，父组利用v-on:ud-event="a=$event"\n\n这里$event为传的value值，赋值给了a变量，如果这里事件后跟的不是表达式而是方法，则方法第一个参数为value值\n')])])])]),t._v(" "),e("li",[t._v("在input标签上的v-model等价于value与input事件的结合，在自定义组件类似，使用￥emit('input', $event.target.value)")])]),t._v(" "),e("h3",{attrs:{id:"自定义事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),e("ol",[e("li",[t._v("自定义事件名，会被转换为全小写；camelCase 或 PascalCase 与 kebab-case，永远不会相同；推荐使用 kebab-case 命名")])]),t._v(" "),e("h3",{attrs:{id:"vue-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-loader"}},[t._v("#")]),t._v(" vue-loader")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在style中用别名引入scss文件时，如果报错，在别名前~")])]),t._v(" "),e("li",[e("p",[t._v("深度作用域")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".a >>> .b \n.a /deep/ .b\n")])])]),e("h3",{attrs:{id:"keep-alive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),e("ol",[e("li",[t._v("include 包含的是组件的name属性值")]),t._v(" "),e("li",[t._v("通过同一个 router-view 进入的路由间切换, keep-alive 都有效,都会缓存页面。")]),t._v(" "),e("li",[t._v("只要通过keep-alive下的路由(前提是要包含在include中) 都会触发activated, 只有第一次进入会触发mounted（切换过router-view入口 再进入也会触发mounted）")]),t._v(" "),e("li",[t._v("注意include 如果用字符串值，后面名称与逗号之间不要有空格")])]),t._v(" "),e("h4",{attrs:{id:"处理保存页面状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理保存页面状态"}},[t._v("#")]),t._v(" 处理保存页面状态")]),t._v(" "),e("ul",[e("li",[t._v("最好一个模块有一个单独的 router-view")]),t._v(" "),e("li",[t._v("在 activated 中请求需要实时更新的数据")]),t._v(" "),e("li",[t._v("在 beforeRouteLeave 中处理和当前需要保存状态页面走同一个 router-view 的页面，否则在这些页面间切换，页面的状态也会被保留（data中的数据）")])]),t._v(" "),e("h3",{attrs:{id:"深入响应式原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深入响应式原理"}},[t._v("#")]),t._v(" 深入响应式原理")]),t._v(" "),e("ul",[e("li",[t._v("非侵入性的响应式系统")]),t._v(" "),e("li",[t._v("数据模型为js对象，对其修改时，视图更新")])]),t._v(" "),e("h4",{attrs:{id:"如何追踪变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何追踪变化"}},[t._v("#")]),t._v(" 如何追踪变化")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("vue将接收的data全部用Object.defineProperty把属性转为getter/setter(导致不支持ie8以及一下)")])]),t._v(" "),e("li",[e("p",[t._v("属性被访问和修改时通知变化")])]),t._v(" "),e("li",[e("p",[t._v("每个组件实例都有对应的watcher实例对象（它会在组件渲染的过程中把属性记录为依赖，当依赖的setter被调用时，会通知watcher重新计算，从而使相关组件更新）")])])]),t._v(" "),e("h4",{attrs:{id:"检测变化的注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检测变化的注意事项"}},[t._v("#")]),t._v(" 检测变化的注意事项")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("只有在data对象上的属性才是响应式的")])]),t._v(" "),e("li",[e("p",[t._v("改变对象和数组的一些情况不会被检测到更新")])]),t._v(" "),e("li",[e("p",[t._v("要用到的状态，提前在data对象中声明")])])]),t._v(" "),e("h4",{attrs:{id:"异步更新队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步更新队列"}},[t._v("#")]),t._v(" 异步更新队列")]),t._v(" "),e("h2",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" vuex")]),t._v(" "),e("p",[t._v("commit 触发 mutation store.commit('name')")]),t._v(" "),e("p",[t._v("dispatch 触发 action store.dispatch('increment')")]),t._v(" "),e("ul",[e("li",[t._v("负组件异步获取数据存入 store ,子组件根据存入的字段，获取数据")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/**\n @des store 中存入的是 id 字段\n*/\nmounted () {\n    // 如果快于父组件放入id，即当前获取的id为空，在调用的函数中会被拦截\n    this.fn(this.id)\n},\n\ncomputed: {\n    // 获取store中存入的id\n    ...mapState(['id'])\n},\n\nwatch: {\n    // 如果store中已经存入了id  再次渲染子组件时 id 没有变化 \n    // 即不会触发 watch，所以在 mounted 中 直接调用并传入已有的id\n    id (v) {\n        this.getData(v)\n    }\n},\n\nmethods: {\n    fn (id) {\n        // 如果没有id，不再继续执行\n        if(!id) return;\n        // 这里是后续方法\n    }\n}\n")])])]),e("h2",{attrs:{id:"api-once-over"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-once-over"}},[t._v("#")]),t._v(" api once-over")]),t._v(" "),e("h3",{attrs:{id:"计算属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性"}},[t._v("#")]),t._v(" 计算属性")]),t._v(" "),e("p",[t._v("computed 不能传参")]),t._v(" "),e("p",[t._v("默认只有getter")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("computed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    testComputed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name变动时调用 getter")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testComputed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发setter")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);
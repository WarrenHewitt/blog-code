(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{243:function(e,n,t){"use strict";t.r(n);var l=t(0),r=Object(l.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul")]),e._v(" "),t("div",{staticClass:"table-of-contents"},[t("ul")]),t("p"),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("选择元素"),t("br"),e._v("\nselection.select() 选择匹配的第一个元素"),t("br"),e._v("\nselection.selectAll()选择匹配到的所有元素")])]),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("数据绑定"),t("br"),e._v("\nselection.datum()  绑定一个数据到选择集上"),t("br"),e._v("\nselection.data() 绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定(对数据集和DOM元素集进行了匹配计算， 直接返回的结果就是两个集合的共有部分)"),t("br"),e._v("\nenter() : 获得数据集中比DOM元素集中多出来的数据"),t("br"),e._v("\nexit() ：获得DOM元素集中比数据集中多出来的数据")])]),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("添加元素"),t("br"),e._v("\nselection.insert() 在被选元素内部前添加"),t("br"),e._v("\nselection.append() 在被选元素内部后添加(创建缺失的DOM对象)")])]),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("删除元素"),t("br"),e._v("\nselection.remove()")])]),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("比例尺"),t("br"),e._v("\n定义域 domain()"),t("br"),e._v("\n值域 range()"),t("br"),e._v("\n线性比例尺 scaleLinear()"),t("br"),e._v("\n序数比例尺 scaleOrdinary()")])]),e._v(" "),t("p",[e._v("共用返回一个线性或是序数比例函数")]),e._v(" "),t("hr"),e._v(" "),t("ul",[t("li",[e._v("enter()    //指定选择集的enter部分  enter()数的作用是返回一个新的D3()对象集合，这个集合包含了所有没有被可视化啊的数据。")])])])}),[],!1,null,null,null);n.default=r.exports}}]);